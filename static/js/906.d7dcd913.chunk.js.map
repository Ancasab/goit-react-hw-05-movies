{"version":3,"file":"static/js/906.d7dcd913.chunk.js","mappings":"oNAGe,SAASA,EAAaC,GAAiB,IAAdC,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GAC3CC,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAiCC,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GACbI,GAAWC,EAAAA,EAAAA,MAEjB,OACIC,EAAAA,EAAAA,KAAA,MAAAC,UACID,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CACDC,GAAE,mCAAAC,OAAqCX,GACvCY,MAAO,CACHP,SAAUA,EAASQ,SACnBC,OAAQX,EAAaY,IAAI,UAC3BP,SAEDT,KAIjB,CChBA,IAoBA,EApBmB,SAAHD,GAAoB,IAAdkB,EAAMlB,EAANkB,OACpB,OACET,EAAAA,EAAAA,KAAAU,EAAAA,SAAA,CAAAT,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGQ,EAAOE,OAAS,EACfF,EAAOG,KAAI,SAACC,EAAOC,GAAK,OACtBd,EAAAA,EAAAA,KAACV,EAAa,CAA8BE,MAAOqB,EAAMrB,MAAOC,GAAIoB,EAAMpB,IAAG,GAAAW,OAAtDS,EAAMpB,GAAE,KAAAW,OAAIU,GAA6C,KAGlFd,EAAAA,EAAAA,KAAA,MAAAC,SAAI,wBAKd,C,qICjBA,EAAuB,yB,SCKR,SAASc,IACtB,IAAAC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAArB,EAAAA,EAAAA,GAAAmB,EAAA,GAA/BG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAwCJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpC5B,GAAwCC,EAAAA,EAAAA,MAAiB8B,GAAA5B,EAAAA,EAAAA,GAAAH,EAAA,GAAlDE,EAAY6B,EAAA,GAAEC,EAAeD,EAAA,GAC9BlB,GAASR,EAAAA,EAAAA,MAAcM,OAAST,EAAaY,IAAI,SAYvD,SAASmB,EAAcR,GACrB,GAAIA,EAAO,CACTO,EAAgB,SAADtB,OAAUe,IACzBK,EAAgB,IAChB,IACmBI,EAAAA,EAAAA,qBAAyBT,GACjCU,MAAK,SAAAC,GACZA,EAAKA,KAAKC,QAAQnB,KAAI,SAAArB,GAAA,IAAGE,EAAEF,EAAFE,GAAID,EAAKD,EAALC,MAAK,OAChCgC,GAAgB,SAAAQ,GAAC,SAAA5B,QAAA6B,EAAAA,EAAAA,GAAQD,GAAC,CAAE,CAAEvC,GAAAA,EAAID,MAAAA,IAAO,GAAE,GAE/C,GACe,CAAf,MAAO0C,GAAQ,CACnB,CACF,EAvBAC,EAAAA,EAAAA,YAAU,WACR5B,GAAUX,EAAawC,IAAI,QAAS7B,GACpCA,GAAUoB,EAAcpB,EAE1B,GAAG,KAEH4B,EAAAA,EAAAA,YAAU,WACRX,EAAgB,GAClB,GAAG,CAACjB,IAyBJ,OACE8B,EAAAA,EAAAA,MAAA,QAAApC,SAAA,EACEoC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAQC,SAVR,SAAAC,GACnBA,EAAEC,gBACJ,EAQoDzC,SAAA,EAC9CD,EAAAA,EAAAA,KAAA,SAAO2C,SAPQ,SAAAF,GACnBrB,EAASqB,EAAEG,OAAOC,MACpB,EAKqCA,MAAO1B,KACtCnB,EAAAA,EAAAA,KAAA,UAAQ8C,QAAS,kBAAMnB,EAAcR,EAAM,EAAClB,SAAC,cAEtB,IAAxBsB,EAAaZ,SAAgBX,EAAAA,EAAAA,KAAC+C,EAAAA,EAAU,CAACtC,OAAQc,MAGxD,C","sources":["components/MovieListItem/MovieListItem.jsx","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\n\nexport default function MovieListItem({ title, id }) {\n    const [searchParams] = useSearchParams();\n    const location = useLocation();\n\n    return (\n        <li>\n            <Link \n                to={`/goit-react-hw-05-movies/movies/${id}`}\n                state={{\n                    location: location.pathname,\n                    search: searchParams.get('query'),\n                }}\n            >\n                {title}\n            </Link>\n        </li>\n    );\n}\n\nMovieListItem.propTypes = {\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieListItem from 'components/MovieListItem/MovieListItem';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <>\n      <ul>\n        {movies.length > 0 ? (\n          movies.map((movie, index) => (\n            <MovieListItem key={`${movie.id}-${index}`} title={movie.title} id={movie.id} />\n          ))\n        ) : (\n          <li>No movies found.</li>\n        )}\n      </ul>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n\n\n\n\n// import MovieListItem from \"components/MovieListItem/MovieListItem\";\n// import PropTypes from \"prop-types\";\n// import React from 'react'\n\n// const MoviesList = ({movies}) => {\n//   return (\n//     <>\n//         <ul>\n//             {movies.map(({ id, title }) => (\n//                 <MovieListItem key={id} title={title} id={id} />\n//             ))}\n//         </ul>\n//     </>\n//   )\n// }\n\n// MoviesList.propTypes = {\n//   movies: PropTypes.array.isRequired,\n// };\n\n// export default MoviesList\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPage_form__2deBf\"};","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport api from 'services/api';\nimport s from './MoviesPage.module.css';\n\nexport default function MoviesPage() {\n  const [query, setQuery] = useState('');\n  const [moviesSearch, setMoviesSearch] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = useLocation().state || searchParams.get('query');\n\n  useEffect(() => {\n    search && searchParams.set('query', search);\n    search && onClickSearch(search);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setMoviesSearch([]);\n  }, [search]);\n\n  function onClickSearch(query) {\n    if (query) {\n      setSearchParams(`query=${query}`);\n      setMoviesSearch([]);\n      try {\n        const response = api.fetchMoviesWithQuery(query);\n        response.then(data => {\n          data.data.results.map(({ id, title }) =>\n            setMoviesSearch(m => [...m, { id, title }])\n          );\n        });\n      } catch (error) {}\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <main>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <input onChange={handleChange} value={query} />\n        <button onClick={() => onClickSearch(query)}>Search</button>\n      </form>\n      {moviesSearch.length !== 0 && <MoviesList movies={moviesSearch} />}\n    </main>\n  );\n}"],"names":["MovieListItem","_ref","title","id","_useSearchParams","useSearchParams","searchParams","_slicedToArray","location","useLocation","_jsx","children","Link","to","concat","state","pathname","search","get","movies","_Fragment","length","map","movie","index","MoviesPage","_useState","useState","_useState2","query","setQuery","_useState3","_useState4","moviesSearch","setMoviesSearch","_useSearchParams2","setSearchParams","onClickSearch","api","then","data","results","m","_toConsumableArray","error","useEffect","set","_jsxs","className","s","onSubmit","e","preventDefault","onChange","target","value","onClick","MoviesList"],"sourceRoot":""}