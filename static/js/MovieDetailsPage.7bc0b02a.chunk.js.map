{"version":3,"file":"static/js/MovieDetailsPage.7bc0b02a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","webpack://react-homework-template/./src/components/AdditionalInformation/AdditionalInformation.module.css?7df3","components/AdditionalInformation/AdditionalInformation.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieDetailsPage_link__rhdjc\",\"img\":\"MovieDetailsPage_img__+Nbrw\",\"info\":\"MovieDetailsPage_info__wQ8PP\",\"text\":\"MovieDetailsPage_text__vp0Sm\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"AdditionalInformation_list__+nXYI\"};","import React from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport css from './AdditionalInformation.module.css';\n\nconst AdditionalInformation = () => {\n    const { movieId } = useParams();\n    const NAVIGATION = ['Cast', 'Reviews']; \n\n    return (\n        <div>\n            <ul className={css.list}>\n                {NAVIGATION.map((page) => (\n                    <li key={page}>\n                        <Link to={`/goit-react-hw-05-movies/movies/${movieId}/${page.toLowerCase()}`}>\n                            {page}\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n            <Outlet />\n        </div>\n    );\n}\n\nexport default AdditionalInformation;\n\n\n\n\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport api from 'services/api';\nimport css from './MovieDetailsPage.module.css';\nimport AdditionalInformation from 'components/AdditionalInformation/AdditionalInformation';\n\nconst MovieDetailsPage = () => {\n    const [movieDetails, setMovieDetails] = useState(null);\n    const { movieId } = useParams();\n    const locationRef = useRef(useLocation().state);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const response = await api.fetchMoviesWithId(movieId);\n                const {\n                    title,\n                    overview,\n                    poster_path,\n                    vote_average,\n                    genres,\n                    release_date,\n                } = response.data;\n\n                setMovieDetails({\n                    title,\n                    overview,\n                    poster_path,\n                    vote_average,\n                    genres,\n                    release_date,\n                });\n            } catch (error) {\n                console.error(\"Failed to fetch movie details:\", error);\n            }\n        };\n\n        fetchData();\n    }, [movieId]);\n\n    if (!movieDetails) {\n        return <p>Loading...</p>;\n    }\n\n    const { title, overview, poster_path, vote_average, genres, release_date } = movieDetails;\n\n    return (\n        <>\n            {locationRef.current && (\n                <Link\n                    className={css.link}\n                    to={locationRef.current.location}\n                    state={locationRef.current.search}>\n                    <span>&#8592; Go back</span>\n                </Link>\n            )}\n            <div className={css.info}>\n                <img className={css.img} src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={title} />\n                <div className={css.text}>\n                    <h2>{`${title} (${release_date.slice(0, 4)})`}</h2>\n                    <p>{`User score: ${vote_average}%`}</p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h3>Genres</h3>\n                    <p>{genres.map(({ name }) => name).join(', ')}</p>\n                </div>\n            </div>\n            <p>Additional Information</p>\n            <AdditionalInformation />\n        </>\n    );\n};\n\nexport default MovieDetailsPage;\n\n\n\n\n\n\n// import React, { useEffect, useRef, useState } from 'react'\n// import { Link, useLocation, useParams } from 'react-router-dom';\n// import api from 'services/api';\n// import css from './MovieDetailsPage.module.css';\n// import AdditionalInformation from 'components/AdditionalInformation/AdditionalInformation';\n\n// const MovieDetailsPage = () => {\n//     const [movieDetails, setMovieDetails] = useState(null);\n//     const { movieId } = useParams();\n    \n//     const locationRef = useRef(useLocation().state);\n\n//     useEffect(() => {\n//         try {\n//             const response = api.fetchMoviesWithId(movieId);\n//             response.then(data => {\n//             const {\n//                 title,\n//                 overview,\n//                 poster_path,\n//                 vote_average,\n//                 genres,\n//                 release_date,\n//             } = data.data;\n//             setMovieDetails({\n//                 title,\n//                 overview,\n//                 poster_path,\n//                 vote_average,\n//                 genres,\n//                 release_date,\n//             });\n//             });\n//         } catch (error) {\n//             console.error(\"Failed to fetch movie details:\", error);\n//         }\n//     }, [movieId]);\n\n//     if (movieDetails) {\n//         const { title, overview, poster_path, vote_average, genres, release_date } = movieDetails;\n\n\n//         return (\n//             <>\n//                 {locationRef.current && (\n//                     <Link\n//                         className={css.link}\n//                         to={locationRef.current.location}\n//                         state={locationRef.current.search}>\n                        \n//                         <span>&#8592; Go back</span>\n//                     </Link>\n//                 )}\n//                 <div className={css.info}>\n//                     <img className={css.img} src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={title} />\n\n//                     <div className={css.text}>\n//                         <h2>{`${title} (${release_date.slice(0, 4)})`}</h2>\n//                         <p>{`User score: ${vote_average}%`}</p>\n//                         <h3>Overview</h3>\n//                         <p>{overview}</p>\n//                         <h3>Genres</h3>\n//                         <p>{genres.map(({ name }) => `${name}`)}</p>\n//                     </div>\n//                 </div>\n//                 <p>Additional Information</p>\n//                 <AdditionalInformation />\n            \n//             </>\n//         );\n//     }\n        \n// }\n\n// export default MovieDetailsPage"],"names":["movieId","useParams","_jsxs","children","_jsx","className","css","map","page","Link","to","concat","toLowerCase","Outlet","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","locationRef","useRef","useLocation","state","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_response$data","_title","_overview","_poster_path","_vote_average","_genres","_release_date","_context","prev","next","api","sent","data","title","overview","poster_path","vote_average","genres","release_date","t0","console","error","stop","apply","arguments","_Fragment","current","location","search","src","alt","slice","_ref2","name","join","AdditionalInformation"],"sourceRoot":""}